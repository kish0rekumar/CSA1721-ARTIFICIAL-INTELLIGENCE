def solve_eight_queens(N):
    def attack(i, j):
        # Check if a queen at position (i, j) attacks any other queen
        for k in range(N):
            if board[i][k] == 1 or board[k][j] == 1:
                return True
            if i + k < N and j + k < N and board[i + k][j + k] == 1:
                return True
            if i - k >= 0 and j + k < N and board[i - k][j + k] == 1:
                return True
        return False

    def place_queens(n):
        if n == 0:
            return True
        for i in range(N):
            for j in range(N):
                if not attack(i, j) and board[i][j] != 1:
                    board[i][j] = 1
                    if place_queens(n - 1):
                        return True
                    board[i][j] = 0
        return False

    board = [[0] * N for _ in range(N)]
    if place_queens(N):
        for row in board:
            print(row)
    else:
        print("No solution found.")

if __name__ == "__main__":
    N = 8  # Number of queens (8 in this case)
    solve_eight_queens(N)
